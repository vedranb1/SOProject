// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SOProject.DomainModels2;

namespace SOProject.DomainModels.Migrations
{
    [DbContext(typeof(SOProjectDbContext))]
    partial class SOProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("SOProject.DomainModels2.Answer", b =>
                {
                    b.Property<int>("AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AnswerDateAndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("AnswerDateAndTime");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("AnswerText");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("VotesCount")
                        .HasColumnType("int")
                        .HasColumnName("VotesCount");

                    b.HasKey("AnswerID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("UserID");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("SOProject.DomainModels2.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CategoryName");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SOProject.DomainModels2.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnswerCount")
                        .HasColumnType("int")
                        .HasColumnName("AnswersCount");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuestionDateAndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("QuestionDateAndTime");

                    b.Property<string>("QuestionName")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("QuestionName");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("ViewsCount")
                        .HasColumnType("int")
                        .HasColumnName("ViewsCount");

                    b.Property<int>("VotesCount")
                        .HasColumnType("int")
                        .HasColumnName("VotesCount");

                    b.HasKey("QuestionID");

                    b.HasIndex("UserID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("SOProject.DomainModels2.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Email");

                    b.Property<ulong>("IsAdmin")
                        .HasColumnType("bit")
                        .HasDefaultValue(0ul)
                        .HasColumnName("IsAdmin");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Mobile");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Username");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SOProject.DomainModels2.Vote", b =>
                {
                    b.Property<int>("VoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnswerID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("VoteValue")
                        .HasColumnType("int")
                        .HasColumnName("VoteValue");

                    b.HasKey("VoteID");

                    b.HasIndex("AnswerID");

                    b.HasIndex("UserID");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("SOProject.DomainModels2.Answer", b =>
                {
                    b.HasOne("SOProject.DomainModels2.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SOProject.DomainModels2.User", null)
                        .WithMany("answers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SOProject.DomainModels2.Question", b =>
                {
                    b.HasOne("SOProject.DomainModels2.User", null)
                        .WithMany("questions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SOProject.DomainModels2.Vote", b =>
                {
                    b.HasOne("SOProject.DomainModels2.Answer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SOProject.DomainModels2.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SOProject.DomainModels2.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("SOProject.DomainModels2.User", b =>
                {
                    b.Navigation("answers");

                    b.Navigation("questions");
                });
#pragma warning restore 612, 618
        }
    }
}
