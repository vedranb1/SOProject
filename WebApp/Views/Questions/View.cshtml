@model StackOverflowProject.ViewModels.QuestionViewModel
@using Microsoft.AspNetCore.Http;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "View Question";
}

<div class="row">
    <div class="col-sm-12">
        <div class="form-group form-row">
            <div class="col-sm-10 offset-sn-2">
                <h3>@Model.QuestionName</h3>
            </div>
            <div class="row">
                <div class="col-sm-2">
                    <span class="badge badge-info">@Model.Category.CategoryName</span>
                </div>
                <div class="col-sm-2">
                    <span class="text-info">
                        @if (Convert.ToInt32(HttpContextAccessor.HttpContext.Session.GetString("CurrentUserName")) != Model.UserID)
                        {
                            @:by @Model.User.Username
                        }
                        else
                        {
                            @:by you
                        }

                    </span>
                </div>
                <div class="col-sm-3">
                    <span class="text-success">by @Model.QuestionDateAndTime</span>
                </div>
                <div class="col-sm-2">
                    <span class="badge badge-pill badge-success col-2">
                        @Model.ViewsCount
                    </span>
                    Views
                </div>
            </div>
            @if (Model.AnswersCount == 0)
            {
                <p class="text-danger">No answers yet!</p>
            }
        </div>

        @for (int i = 0; i < Model.Answers.Count; i++)
        {
            <span class="currentuser">@HttpContextAccessor.HttpContext.Session.GetInt32("CurrentUserID")</span>
            <span class="asnweruserid">@Model.Answers[i].UserID</span>
            <div class="form-group form-row">
                <div class="col-sm-2">
                    <span class="badge badge-secondary col-2 votescount">
                        @Model.Answers[i].VotesCount
                    </span>
                    Votes

                    @if (HttpContextAccessor.HttpContext.Session.GetInt32("CurrentUsername") != null && HttpContextAccessor.HttpContext.Session.GetInt32("CurrentUserID") != Model.Answers[i].UserID)
                    {
                        if (Model.Answers[i].CurrentUserVoteType == 1)
                        {
                            <img src="~/Images/up-color.png" class="btnUpVote" style="cursor:pointer" width="24px" data-answerid="@Model.Answers[i].AnswerID" />
                            <img src="~/Images/down-empty.png" class="btnDownVote" style="cursor:pointer" width="24px" data-answerid="@Model.Answers[i].AnswerID" />
                        }
                        else if (Model.Answers[i].CurrentUserVoteType == -1)
                        {
                            <img src="~/Images/up-empty.png" class="btnUpVote" style="cursor:pointer" width="24px" data-answerid="@Model.Answers[i].AnswerID" />
                            <img src="~/Images/down-color.png" class="btnDownVote" style="cursor:pointer" width="24px" data-answerid="@Model.Answers[i].AnswerID" />
                        }
                        else
                        {
                            <img src="~/Images/up-empty.png" class="btnUpVote" style="cursor:pointer" width="24px" data-answerid="@Model.Answers[i].AnswerID" />
                            <img src="~/Images/down-empty.png" class="btnDownVote" style="cursor:pointer" width="24px" data-answerid="@Model.Answers[i].AnswerID" />
                        }
                    }
                </div>
                <div class="col-sm-7">
                    @if (HttpContextAccessor.HttpContext.Session.GetInt32("CurrentUserID") != Model.Answers[i].UserID)
                    {
                        @Model.Answers[i].AnswerText
                    }
                    else
                    {
                        <p class="answer">@Model.Answers[i].AnswerText</p>
                        <button class="btn btn-info editbutton">Edit</button>

                        <form class="needs-validation hidden" novalidate="novalidate" asp-controller="Questions" asp-action="EditAnswer" method="post">
                            <div class="form-group form-row">
                                <div class="col-sm-12">
                                    <h4>Edit your asnswer</h4>

                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="AnswerID" value="@Model.Answers[i].AnswerID" />
                                    <input type="hidden" name="QuestionID" value="@Model.Answers[i].QuestionID" />
                                    <div class="form-row">
                                        <div class="form-group col-sm-12">
                                            <textarea class="form-control" id="txtAnswer" placeholder="Enter answer" name="AnswerText" required="required">@Model.Answers[i].AnswerText</textarea>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Please enter answer.
                                            </div>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Update Answer</button>
                                    <div class="text-danger">
                                        @Html.ValidationSummary()
                                    </div>
                                </div>
                            </div>
                        </form>
                    }
                </div>
            </div>


            <div class="col-sm-1">
                @if (HttpContextAccessor.HttpContext.Session.GetInt32("CurrentUserID") != Model.Answers[i].UserID)
                {
                    @:by @Model.Answers[i].User.Username
                }
                else
                {
                    @:by you
                }
            </div>
            <div class="col-sm-2">
                on @Model.Answers[i].AnswerDateAndTime
            </div>
        }
    </div>
    @if (HttpContextAccessor.HttpContext.Session.GetInt32("CurrentUsername") != null)
    {
        <form class="needs-validation hidden" novalidate="novalidate" asp-controller="Questions" asp-action="AddAnswer" method="post">
            <div class="form-group form-row">
                <div class="col-sm-12">
                    <h4>Edit your answer</h4>

                    @Html.AntiForgeryToken()

                    <input type="hidden" name="QuestionID" value="@Model.QuestionID" />
                    <div class="form-row">
                        <div class="form-group col-sm-12">
                            <textarea class="form-control" id="txtAnswer" placeholder="Enter answer" name="AnswerText" required="required"></textarea>
                            <div class="valid-feedback">
                                Looks good!
                            </div>
                            <div class="invalid-feedback">
                                Please enter answer.
                            </div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Add Answer</button>
                    <div class="text-danger">
                        @Html.ValidationSummary()
                    </div>
                </div>
            </div>
        </form>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function (e) {
        $("a[href='/questions/view']").addClass("active");
        $(".editbutton").click(function () {
            $(this).parent().find(".needs-validation").show();
            $(this).hide();
            $(this).parent().find(".answer").hide();
        });
    })
</script>

<script>
    $(".btnUpVote").click(function ()
    {
        var UpBtn = $(this);
        var DownBtn = UpBtn.parent().find(".btnDownVote");
        if (UpBtn.attr("src" == "/images/up-empty.png"))
        {
            var value;
            if (UpBtn.attr("src") == "/Images/up-empty.png" && DownBtn.attr("src") == "/Images/down-empty.png")
            {
                value = 1;
            }
            else
            {
                value = 2;
            }
            $.ajax({
                url: "/api/questions?answerid=" + UpBtn.attr("data-answerid") + "&value=" + value + "&UserID=@HttpContextAccessor.HttpContext.Session.GetInt32("CurrentUserID")", type="POST", success: function ()
                {
                    UpBtn.parent.find(".votescount").text(parentInt(UpBtn.parent.find("votescount").text()) + value);
                    UpBtn.attr("src", "/Images/up-color.png");
                    DownBtn.attr("src", "/Images/down-empty.png");
                }
            });
        }
    })

    $(".btnDownVote").click(function ()
    {
        var UpBtn = $(this);
        var DownBtn = UpBtn.parent().find(".btnUpVote");
        if (UpBtn.attr("src" == "/images/down-empty.png"))
        {
            var value;
            if (UpBtn.attr("src") == "/Images/up-empty.png" && DownBtn.attr("src") == "/Images/down-empty.png")
            {
                value = -1;
            }
            else
            {
                value = -2;
            }
            $.ajax({
                url: "/api/questions?answerid=" + UpBtn.attr("data-answerid") + "&value=" + value + "&UserID=@HttpContextAccessor.HttpContext.Session.GetInt32("CurrentUserID")", type="POST", success: function ()
                {
                    DownBtn.parent.find(".votescount").text(parentInt(DownBtn.parent.find("votescount").text()) + value);
                    DownBtn.attr("src", "/Images/down-color.png");
                    UpBtn.attr("src", "/Images/up-empty.png");
                }
            });
        }
    })
</script>